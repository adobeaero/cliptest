//Latest version of Lunar Lander Playground
const createScene = function () {
    canvas['touch-action'] = 'none';
    canvas.style['touch-action'] = 'none';
    canvas.style['-webkit-user-select'] = 'none';
    
    var rcsActive = false;
    function setRCS(yaw, pos) {
        sound_directionalThrusters.setVolume(1);

        rcsActive = true;
        if (yaw) {
            if (pos) {
                spaceCraft.physicsImpostor.setAngularVelocity(BABYLON.Vector3.TransformNormal(av_rotate_left, spaceCraft.computeWorldMatrix()));
                RCSyawPosParticleSystem1.start();
                RCSyawPosParticleSystem2.start();
            }
            else {
                spaceCraft.physicsImpostor.setAngularVelocity(BABYLON.Vector3.TransformNormal(av_rotate_right, spaceCraft.computeWorldMatrix()));
                RCSyawNegParticleSystem1.start();
                RCSyawNegParticleSystem2.start();
            }
        }
        else {
            if (pos) {
                spaceCraft.physicsImpostor.setAngularVelocity(BABYLON.Vector3.TransformNormal(av_rotate_up, spaceCraft.computeWorldMatrix()));
                RCSpitchPosParticleSystem1.start();
                RCSpitchPosParticleSystem2.start();
            }
            else {
                spaceCraft.physicsImpostor.setAngularVelocity(BABYLON.Vector3.TransformNormal(av_rotate_down, spaceCraft.computeWorldMatrix()));
                RCSpitchNegParticleSystem1.start();
                RCSpitchNegParticleSystem2.start();
            }            
        }
    }
    function unsetRCS() {
        sound_directionalThrusters.setVolume(0);
        RCSyawPosParticleSystem1.stop();
        RCSyawPosParticleSystem2.stop();
        RCSyawNegParticleSystem1.stop();
        RCSyawNegParticleSystem2.stop();
        RCSpitchPosParticleSystem1.stop();
        RCSpitchPosParticleSystem2.stop();
        RCSpitchNegParticleSystem1.stop();
        RCSpitchNegParticleSystem2.stop();
        rcsActive = false;
    }
    
    var gUIElements = new Object();
    var gUIString = "%5B%7B%22color%22%3A%7B%22red%22%3A0%2C%22green%22%3A0%2C%22blue%22%3A0%7D%2C%22kind%22%3A%22SOLIDFILL%22%2C%22bounds%22%3A%7B%22left%22%3A0%2C%22top%22%3A339%2C%22right%22%3A1710%2C%22bottom%22%3A627%7D%2C%22hAlign%22%3A%22none%22%2C%22vAlign%22%3A%22TOP%22%2C%22name%22%3A%22Top%20Fill%22%7D%2C%7B%22kind%22%3A%22TEXT%22%2C%22text%22%3A%22DISTANCE%22%2C%22color%22%3A%7B%22red%22%3A255%2C%22green%22%3A255%2C%22blue%22%3A255%2C%22hexValue%22%3A%22FFFFFF%22%2C%22typename%22%3A%22RGBColor%22%7D%2C%22font%22%3A%22Futura-Medium%22%2C%22fontSize%22%3A%2218%20pt%22%2C%22align%22%3A%22LEFT%22%2C%22bounds%22%3A%7B%22left%22%3A44%2C%22top%22%3A380%2C%22right%22%3A226%2C%22bottom%22%3A411%7D%2C%22hAlign%22%3A%22LEFT%22%2C%22vAlign%22%3A%22TOP%22%2C%22name%22%3A%22Distance%20Label%22%7D%2C%7B%22kind%22%3A%22TEXT%22%2C%22text%22%3A%22FUEL%22%2C%22color%22%3A%7B%22red%22%3A255%2C%22green%22%3A255%2C%22blue%22%3A255%2C%22hexValue%22%3A%22FFFFFF%22%2C%22typename%22%3A%22RGBColor%22%7D%2C%22font%22%3A%22Futura-Medium%22%2C%22fontSize%22%3A%2218%20pt%22%2C%22align%22%3A%22LEFT%22%2C%22bounds%22%3A%7B%22left%22%3A48%2C%22top%22%3A554%2C%22right%22%3A130%2C%22bottom%22%3A583%7D%2C%22hAlign%22%3A%22LEFT%22%2C%22vAlign%22%3A%22TOP%22%2C%22name%22%3A%22Fuel%20Label%22%7D%2C%7B%22kind%22%3A%22TEXT%22%2C%22text%22%3A%22TIME%22%2C%22color%22%3A%7B%22red%22%3A255%2C%22green%22%3A255%2C%22blue%22%3A255%2C%22hexValue%22%3A%22FFFFFF%22%2C%22typename%22%3A%22RGBColor%22%7D%2C%22font%22%3A%22Futura-Medium%22%2C%22fontSize%22%3A%2218%20pt%22%2C%22align%22%3A%22LEFT%22%2C%22bounds%22%3A%7B%22left%22%3A44%2C%22top%22%3A464%2C%22right%22%3A129%2C%22bottom%22%3A495%7D%2C%22hAlign%22%3A%22LEFT%22%2C%22vAlign%22%3A%22TOP%22%2C%22name%22%3A%22Time%20Label%22%7D%2C%7B%22kind%22%3A%22TEXT%22%2C%22text%22%3A%2212345%22%2C%22color%22%3A%7B%22red%22%3A255%2C%22green%22%3A255%2C%22blue%22%3A255%2C%22hexValue%22%3A%22FFFFFF%22%2C%22typename%22%3A%22RGBColor%22%7D%2C%22font%22%3A%22Futura-Medium%22%2C%22fontSize%22%3A%2218%20pt%22%2C%22align%22%3A%22RIGHT%22%2C%22bounds%22%3A%7B%22left%22%3A580%2C%22top%22%3A464%2C%22right%22%3A686%2C%22bottom%22%3A495%7D%2C%22hAlign%22%3A%22LEFT%22%2C%22vAlign%22%3A%22TOP%22%2C%22name%22%3A%22Time%20Value%22%7D%2C%7B%22kind%22%3A%22TEXT%22%2C%22text%22%3A%2212345%22%2C%22color%22%3A%7B%22red%22%3A255%2C%22green%22%3A255%2C%22blue%22%3A255%2C%22hexValue%22%3A%22FFFFFF%22%2C%22typename%22%3A%22RGBColor%22%7D%2C%22font%22%3A%22Futura-Medium%22%2C%22fontSize%22%3A%2218%20pt%22%2C%22align%22%3A%22RIGHT%22%2C%22bounds%22%3A%7B%22left%22%3A580%2C%22top%22%3A554%2C%22right%22%3A686%2C%22bottom%22%3A585%7D%2C%22hAlign%22%3A%22LEFT%22%2C%22vAlign%22%3A%22TOP%22%2C%22name%22%3A%22Fuel%20Value%22%7D%2C%7B%22kind%22%3A%22TEXT%22%2C%22text%22%3A%2212345%22%2C%22color%22%3A%7B%22red%22%3A255%2C%22green%22%3A255%2C%22blue%22%3A255%2C%22hexValue%22%3A%22FFFFFF%22%2C%22typename%22%3A%22RGBColor%22%7D%2C%22font%22%3A%22Futura-Medium%22%2C%22fontSize%22%3A%2218%20pt%22%2C%22align%22%3A%22RIGHT%22%2C%22bounds%22%3A%7B%22left%22%3A580%2C%22top%22%3A380%2C%22right%22%3A686%2C%22bottom%22%3A411%7D%2C%22hAlign%22%3A%22LEFT%22%2C%22vAlign%22%3A%22TOP%22%2C%22name%22%3A%22Distance%20Text%22%7D%2C%7B%22kind%22%3A%22TEXT%22%2C%22text%22%3A%22ALTITUDE%22%2C%22color%22%3A%7B%22red%22%3A255%2C%22green%22%3A255%2C%22blue%22%3A255%2C%22hexValue%22%3A%22FFFFFF%22%2C%22typename%22%3A%22RGBColor%22%7D%2C%22font%22%3A%22Futura-Medium%22%2C%22fontSize%22%3A%2218%20pt%22%2C%22align%22%3A%22LEFT%22%2C%22bounds%22%3A%7B%22left%22%3A928%2C%22top%22%3A375%2C%22right%22%3A1096%2C%22bottom%22%3A405%7D%2C%22hAlign%22%3A%22RIGHT%22%2C%22vAlign%22%3A%22TOP%22%2C%22name%22%3A%22Altitude%20Label%22%7D%2C%7B%22kind%22%3A%22TEXT%22%2C%22text%22%3A%22H%20SPEED%22%2C%22color%22%3A%7B%22red%22%3A255%2C%22green%22%3A255%2C%22blue%22%3A255%2C%22hexValue%22%3A%22FFFFFF%22%2C%22typename%22%3A%22RGBColor%22%7D%2C%22font%22%3A%22Futura-Medium%22%2C%22fontSize%22%3A%2218%20pt%22%2C%22align%22%3A%22LEFT%22%2C%22bounds%22%3A%7B%22left%22%3A931%2C%22top%22%3A461%2C%22right%22%3A1081%2C%22bottom%22%3A490%7D%2C%22hAlign%22%3A%22RIGHT%22%2C%22vAlign%22%3A%22TOP%22%2C%22name%22%3A%22Horizontal%20Speed%20Label%22%7D%2C%7B%22kind%22%3A%22TEXT%22%2C%22text%22%3A%22V%20SPEED%22%2C%22color%22%3A%7B%22red%22%3A255%2C%22green%22%3A255%2C%22blue%22%3A255%2C%22hexValue%22%3A%22FFFFFF%22%2C%22typename%22%3A%22RGBColor%22%7D%2C%22font%22%3A%22Futura-Medium%22%2C%22fontSize%22%3A%2218%20pt%22%2C%22align%22%3A%22LEFT%22%2C%22bounds%22%3A%7B%22left%22%3A931%2C%22top%22%3A545%2C%22right%22%3A1081%2C%22bottom%22%3A575%7D%2C%22hAlign%22%3A%22RIGHT%22%2C%22vAlign%22%3A%22TOP%22%2C%22name%22%3A%22Vertical%20Speed%20Label%22%7D%2C%7B%22kind%22%3A%22TEXT%22%2C%22text%22%3A%2212345%22%2C%22color%22%3A%7B%22red%22%3A255%2C%22green%22%3A255%2C%22blue%22%3A255%2C%22hexValue%22%3A%22FFFFFF%22%2C%22typename%22%3A%22RGBColor%22%7D%2C%22font%22%3A%22Futura-Medium%22%2C%22fontSize%22%3A%2218%20pt%22%2C%22align%22%3A%22RIGHT%22%2C%22bounds%22%3A%7B%22left%22%3A1559%2C%22top%22%3A375%2C%22right%22%3A1665%2C%22bottom%22%3A406%7D%2C%22hAlign%22%3A%22RIGHT%22%2C%22vAlign%22%3A%22TOP%22%2C%22name%22%3A%22Altitute%20Text%22%7D%2C%7B%22kind%22%3A%22TEXT%22%2C%22text%22%3A%2212345%22%2C%22color%22%3A%7B%22red%22%3A255%2C%22green%22%3A255%2C%22blue%22%3A255%2C%22hexValue%22%3A%22FFFFFF%22%2C%22typename%22%3A%22RGBColor%22%7D%2C%22font%22%3A%22Futura-Medium%22%2C%22fontSize%22%3A%2218%20pt%22%2C%22align%22%3A%22RIGHT%22%2C%22bounds%22%3A%7B%22left%22%3A1559%2C%22top%22%3A459%2C%22right%22%3A1665%2C%22bottom%22%3A490%7D%2C%22hAlign%22%3A%22RIGHT%22%2C%22vAlign%22%3A%22TOP%22%2C%22name%22%3A%22Horizontal%20Speed%20Text%22%7D%2C%7B%22kind%22%3A%22TEXT%22%2C%22text%22%3A%2212345%22%2C%22color%22%3A%7B%22red%22%3A255%2C%22green%22%3A255%2C%22blue%22%3A255%2C%22hexValue%22%3A%22FFFFFF%22%2C%22typename%22%3A%22RGBColor%22%7D%2C%22font%22%3A%22Futura-Medium%22%2C%22fontSize%22%3A%2218%20pt%22%2C%22align%22%3A%22RIGHT%22%2C%22bounds%22%3A%7B%22left%22%3A1559%2C%22top%22%3A549%2C%22right%22%3A1665%2C%22bottom%22%3A580%7D%2C%22hAlign%22%3A%22RIGHT%22%2C%22vAlign%22%3A%22TOP%22%2C%22name%22%3A%22Vertical%20Speed%20Text%22%7D%2C%7B%22color%22%3A%7B%22red%22%3A0%2C%22green%22%3A0%2C%22blue%22%3A0%7D%2C%22kind%22%3A%22SOLIDFILL%22%2C%22bounds%22%3A%7B%22left%22%3A0%2C%22top%22%3A3240%2C%22right%22%3A1710%2C%22bottom%22%3A3663%7D%2C%22hAlign%22%3A%22none%22%2C%22vAlign%22%3A%22BOTTOM%22%2C%22name%22%3A%22Bottom%20Fill%22%7D%2C%7B%22kind%22%3A%22IMAGE%22%2C%22bounds%22%3A%7B%22left%22%3A33%2C%22top%22%3A3303%2C%22right%22%3A225%2C%22bottom%22%3A3627%7D%2C%22hAlign%22%3A%22LEFT%22%2C%22vAlign%22%3A%22BOTTOM%22%2C%22name%22%3A%22Stabilize%20Button%22%2C%22url%22%3A%22data%3Aimage/png%3Bbase64%%3D%22%7D%2C%7B%22kind%22%3A%22IMAGE%22%2C%22bounds%22%3A%7B%22left%22%3A801%2C%22top%22%3A3292%2C%22right%22%3A901%2C%22bottom%22%3A3392%7D%2C%22hAlign%22%3A%22HORIZONTAL_CENTER%22%2C%22vAlign%22%3A%22BOTTOM%22%2C%22name%22%3A%22Up%20Button%22%2C%22url%22%3A%22data%3Aimage/png%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAIAAAD/gAIDAAAACXBIWXMAAAsTAAALEwEAmpwYAAAHBmlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNy4xLWMwMDAgNzkuZGFiYWNiYiwgMjAyMS8wNC8xNC0wMDozOTo0NCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIDIyLjUgKE1hY2ludG9zaCkiIHhtcDpDcmVhdGVEYXRlPSIyMDIxLTEyLTAxVDE3OjM4OjI2LTA1OjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDIxLTEyLTAxVDE3OjM4OjI2LTA1OjAwIiB4bXA6TW9kaWZ5RGF0ZT0iMjAyMS0xMi0wMVQxNzozODoyNi0wNTowMCIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDoxNjUzZjk4Ny1mYjQwLTRiM2MtOTRkZi1mZTM2MzQ1YjYyYmYiIHhtcE1NOkRvY3VtZW50SUQ9ImFkb2JlOmRvY2lkOnBob3Rvc2hvcDpkZTIzY2RjZS1hNTdjLWE3NDItODkxNC01YTBkMTU3ZTA5ZTAiIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDo0NzMzZjU2OS1kMTQ1LTQ1YWMtYmNhZi03Y2E5MWY1MmQwNzEiIHBob3Rvc2hvcDpDb2xvck1vZGU9IjMiIHBob3Rvc2hvcDpJQ0NQcm9maWxlPSJzUkdCIElFQzYxOTY2LTIuMSIgZGM6Zm9ybWF0PSJpbWFnZS9wbmciPiA8eG1wTU06SGlzdG9yeT4gPHJkZjpTZXE+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJjcmVhdGVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjQ3MzNmNTY5LWQxNDUtNDVhYy1iY2FmLTdjYTkxZjUyZDA3MSIgc3RFdnQ6d2hlbj0iMjAyMS0xMi0wMVQxNzozODoyNi0wNTowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIDIyLjUgKE1hY2ludG9zaCkiLz4gPHJkZjpsaSBzdEV2dDphY3Rpb249InNhdmVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjE2NTNmOTg3LWZiNDAtNGIzYy05NGRmLWZlMzYzNDViNjJiZiIgc3RFdnQ6d2hlbj0iMjAyMS0xMi0wMVQxNzozODoyNi0wNTowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIDIyLjUgKE1hY2ludG9zaCkiIHN0RXZ0OmNoYW5nZWQ9Ii8iLz4gPC9yZGY6U2VxPiA8L3htcE1NOkhpc3Rvcnk+IDxwaG90b3Nob3A6RG9jdW1lbnRBbmNlc3RvcnM+IDxyZGY6QmFnPiA8cmRmOmxpPkYxMUZFNkQ2QUZBQjJEODdFNDcxNDE4MzJBNzE5MkFBPC9yZGY6bGk+IDxyZGY6bGk+YWRvYmU6ZG9jaWQ6cGhvdG9zaG9wOjZjM2UwNTQ3LTE5NGItN2U0NC04ZTUzLTdkYTg0YjVhMzlmYTwvcmRmOmxpPiA8cmRmOmxpPnhtcC5kaWQ6MjIyNDQ3MzgtNjFiMC00MDEzLTk0M2QtYWYzZWIyMzQ1ZWIzPC9yZGY6bGk+IDwvcmRmOkJhZz4gPC9waG90b3Nob3A6RG9jdW1lbnRBbmNlc3RvcnM+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+UT0P/AAAA8BJREFUeNrtnc0rdG8cxj/GkPcsLK1sxA7FVlJKSEJkoaSUkg1/gyxsREpJWSCSJEWSJRYkG2//gbzm/SV+i2+m8zzPLzmDmTPOdW3ONHPmNPc1n/s659znfonDodTUVKC7uxvo7e0FMjMz8ZMuLy+B/v5+YHBwELi7uwt9GkD6tOJsU1xcDGxtbcmRv1RUVATs7OyILJdkWU7d3NyE6mdBQQFwfHwMvL29+cuOuDggNzcX2N7eBlJSUkJpLrJcKGjnPpMxdXR05Fs7rCYdHByE0mp/fx/o6uoSWS4r6cXFReh6KhAI+DCnPs6v19dX4PT0VGS5tM/JkXkp/ZtiuoJ3LZkls2SWzJJZMksKeu0HpaenA/f398DLy4vIEllfVklJCbC5uQmcnJwA2dnZwPPzs8jSvWF4/1ggAJydnfHn86T6+npgbm5O94YiKyyVlpYC6+vrf71vZ0NrBY9Wcoms2CQrPj4eOD8/BzIyMv53n8bGRmB2dlZkiaxPq6ysDFhbW/tgH0sue3L39PQkskTWl9PKqebmZmB6elpkiawPVV5eDqyurn5y/2gll8iKHbIsrayPXVpamqvvtrS0AJOTkyJLZP2jiooKYHl5OYzvWs8Du1t8fHwUWSILgGAwCFxdXYXoCE+tra3AxMSEyBJZAFRWVgJLS0tfPE4kk0tkeZssS6vr62sgKSnpW47Z1tYGjI+Piywfk1VVVQUsLi5++5GTk5OBh4cHkeUzsn4irZxqb28HxsbGRJbPyKqpqQEWFhZ+tBh2zWV9b0TWbycrISGB9/FmiYmJP1qMjo4OYHR0VGT5gKza2lpgfn4+YoX5ieQSWV4iK5Jp5VRnZycwMjIisn4pWXV1dUSvx549W3TOxyCyYp+saKWVUzaeeWhoSGT9IrIaGhqAmZmZqBfsu5JLZEWbLEuo29tb3tuwoiubr8JmKhJZsUxWU1MTMDU15aniWS8d411kxRpZXksrp3p6eoCBgQGRFYNkeTOtnLLRsXZfIbIipG+ImPz8fI8XMicnB9jb2/vicURWZDPLxkdsbGx4kLKVlRWgurqacEcsKrO80erw+ySyFPAyS2bJLJklySyZJbNklsySWZLMklkyy1MK2vwKNtOetWdppQGTs3VPKw24J8vWxerr6+N9vRlbG0TKy8sLvTaXRJabimmjEqyngvWTs/VmDg8P8euKTsaUrehkYyTNJZHlxkrbFBYWhryUnLJVrnZ3d0VWWGSZrGZaP3Lr2ZSVleUrO+x6ys59w8PD/DnGTGS50H+tD8onbKUJXgAAAABJRU5ErkJggg%3D%3D%22%7D%2C%7B%22kind%22%3A%22IMAGE%22%2C%22bounds%22%3A%7B%22left%22%3A801%2C%22top%22%3A3516%2C%22right%22%3A901%2C%22bottom%22%3A3616%7D%2C%22hAlign%22%3A%22HORIZONTAL_CENTER%22%2C%22vAlign%22%3A%22BOTTOM%22%2C%22name%22%3A%22Down%20Button%22%2C%22url%22%3A%22data%3Aimage/png%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAIAAAD/gAIDAAAACXBIWXMAAAsTAAALEwEAmpwYAAAHBmlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNy4xLWMwMDAgNzkuZGFiYWNiYiwgMjAyMS8wNC8xNC0wMDozOTo0NCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIDIyLjUgKE1hY2ludG9zaCkiIHhtcDpDcmVhdGVEYXRlPSIyMDIxLTEyLTAxVDE3OjM4OjI3LTA1OjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDIxLTEyLTAxVDE3OjM4OjI3LTA1OjAwIiB4bXA6TW9kaWZ5RGF0ZT0iMjAyMS0xMi0wMVQxNzozODoyNy0wNTowMCIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDpiNDFhMzg5ZC1kMTZkLTRlZjQtODY2Ni1iNzlhYWU5NDFjMTkiIHhtcE1NOkRvY3VtZW50SUQ9ImFkb2JlOmRvY2lkOnBob3Rvc2hvcDoxN2U2NDNkNy0xMjhiLWU5NDQtODVmYS0wNjM2MjhlZDExOTciIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDo0YjIzYTY2MS01MjkxLTQ0N2MtYjFmMi00NDE4N2ZmYzIxMGYiIHBob3Rvc2hvcDpDb2xvck1vZGU9IjMiIHBob3Rvc2hvcDpJQ0NQcm9maWxlPSJzUkdCIElFQzYxOTY2LTIuMSIgZGM6Zm9ybWF0PSJpbWFnZS9wbmciPiA8eG1wTU06SGlzdG9yeT4gPHJkZjpTZXE+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJjcmVhdGVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjRiMjNhNjYxLTUyOTEtNDQ3Yy1iMWYyLTQ0MTg3ZmZjMjEwZiIgc3RFdnQ6d2hlbj0iMjAyMS0xMi0wMVQxNzozODoyNy0wNTowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIDIyLjUgKE1hY2ludG9zaCkiLz4gPHJkZjpsaSBzdEV2dDphY3Rpb249InNhdmVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOmI0MWEzODlkLWQxNmQtNGVmNC04NjY2LWI3OWFhZTk0MWMxOSIgc3RFdnQ6d2hlbj0iMjAyMS0xMi0wMVQxNzozODoyNy0wNTowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIDIyLjUgKE1hY2ludG9zaCkiIHN0RXZ0OmNoYW5nZWQ9Ii8iLz4gPC9yZGY6U2VxPiA8L3htcE1NOkhpc3Rvcnk+IDxwaG90b3Nob3A6RG9jdW1lbnRBbmNlc3RvcnM+IDxyZGY6QmFnPiA8cmRmOmxpPkYxMUZFNkQ2QUZBQjJEODdFNDcxNDE4MzJBNzE5MkFBPC9yZGY6bGk+IDxyZGY6bGk+YWRvYmU6ZG9jaWQ6cGhvdG9zaG9wOjZjM2UwNTQ3LTE5NGItN2U0NC04ZTUzLTdkYTg0YjVhMzlmYTwvcmRmOmxpPiA8cmRmOmxpPnhtcC5kaWQ6MjIyNDQ3MzgtNjFiMC00MDEzLTk0M2QtYWYzZWIyMzQ1ZWIzPC9yZGY6bGk+IDwvcmRmOkJhZz4gPC9waG90b3Nob3A6RG9jdW1lbnRBbmNlc3RvcnM+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+TsjswAAABAFJREFUeNrtncsrfH8cxl9kIUoWFkrut1wj5bIgLIgdFvwTWMh/YMNSWVNKbFgoiqIoIsn9fr+sKJLIht/i3Uynr9/3cmbOnIt5P5sRM58+5/E6z3nOzJnzicCg2NhYoLu7G+jt7QXi4+MJJz0/PwP9/f3A4OAg8Pb25v9rJKp/VoQ8lJeXA2tra+rILyorKwM2NzeVLJNkSU69vr7698+Kigpgf38f+Pr6Ci87IiKAoqIiYHV1FYiJifGnuZJlQlFy7BMJU3t7e2Frh+xJOzs7QFVVFbC9vQ10dnYqWSZ30qenJ3+fioyMDMOc+nN+fX5+Ao+Pj0qWSfuMHImXqu8ppg3etNQsNUvNUrPULDVLpWapWWqWmqVmqVkqNUvNCo2igh8iMTER2NjYAJKSkly1eYeHh0BlZSXw8vKiZHmKrI6ODhcyJcrLywPa2tqA4eFhJctTZC0sLLh8I9fX1/VoaLcs+3RHrgyQ4457tLy8DNTU1AQ8gn664zRZxcXF+K4McI8KCgqAg4MDJcuzZIlWVlbwXX/irBYXF4H6+vogx1Gy3EFWYWEhsLu765LufnR0pGT9CLJES0tLQHV1tSObND8/DzQ0NFgympLlJrLy8/PxXe9sv3Jzc4GTkxMl68eRZWw6tbW1tm3M3Nwc0NjYaOGYSpb7yJKmE8x5mVnl5OQAp6enSpbzigrd0PLJiiRXXV1dSDdjZmbGcqa+S8lyR2YZW0/w52h/VnZ2NnB2dmb5yJpZ7sss0fHxsb8BWXW+ZtT09HSImNLMcndmGRuQUGatsrKygPPz8xDNXDPLrZklkvcAZmdngaamJkvGnJqaCilTmlleyCxjvljVszMyMoDLy8uQzlkzy92ZJZI2JOdxzc3NAY8zOTlpA1OaWd7JLFFmZmaQnTs9PR24urqyYbaaWV7ILJE0I2lJLS0tpl47MTFhG1OaWV7LLGPuXFxcmHpVamoqcHNzY9s8NbO8k1kiaUnSmFpbW//6/LGxMZuZ0szyZmaJ0tLS/rGLp6SkALe3tzbPUDPLa5klksYk7am9vf1/nzM6OuoIU5pZXs4sY3v6XS9PTk4G7u7uHJmbZpY3M0t0fX0NjI+P4/v2omhkZMRBpjSzvJ9ZIvmu9f39/S+/eXh4cHBWmlneJ0sUHR3t/39+fHw4Ph8l66eQ5TYpWVod1Cw1S81Ss1RqVqDvOshdpeLi4vw9S1ca+N46daUB82QNDAwAfX19+NabkbVBVCUlJf6fZfUwJcvMjvl9RSe534fcmyE8V3QSpuTuJ/IuiKzrpGSZsVIeZK01uSOkyqjS0lJga2tLyQqILJHsmV1dXUBPTw+QkJAQVnZIn5Jj39DQEPD+/q4NPhD9B971qeG3oRubAAAAAElFTkSuQmCC%22%7D%2C%7B%22kind%22%3A%22IMAGE%22%2C%22bounds%22%3A%7B%22left%22%3A917%2C%22top%22%3A3404%2C%22right%22%3A1017%2C%22bottom%22%3A3504%7D%2C%22hAlign%22%3A%22HORIZONTAL_CENTER%22%2C%22vAlign%22%3A%22BOTTOM%22%2C%22name%22%3A%22Right%20Button%22%2C%22url%22%3A%22data%3Aimage/png%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAIAAAD/gAIDAAAACXBIWXMAAAsTAAALEwEAmpwYAAAHBmlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNy4xLWMwMDAgNzkuZGFiYWNiYiwgMjAyMS8wNC8xNC0wMDozOTo0NCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIDIyLjUgKE1hY2ludG9zaCkiIHhtcDpDcmVhdGVEYXRlPSIyMDIxLTEyLTAxVDE3OjM4OjI3LTA1OjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDIxLTEyLTAxVDE3OjM4OjI3LTA1OjAwIiB4bXA6TW9kaWZ5RGF0ZT0iMjAyMS0xMi0wMVQxNzozODoyNy0wNTowMCIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDozOGFiOWVlOS00M2RkLTQwZjctYjk0OC1lNGE1YzRjZmVhM2UiIHhtcE1NOkRvY3VtZW50SUQ9ImFkb2JlOmRvY2lkOnBob3Rvc2hvcDo3YTE1ZTI5Yy02MDNhLTJmNGUtOGI2Yy01ZWFhYjdhOGQ2Y2YiIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDpiMzk4ZWMyNi1mZDY5LTRjOTMtOGUwYi0xNWEyZDlmOGNiNTkiIHBob3Rvc2hvcDpDb2xvck1vZGU9IjMiIHBob3Rvc2hvcDpJQ0NQcm9maWxlPSJzUkdCIElFQzYxOTY2LTIuMSIgZGM6Zm9ybWF0PSJpbWFnZS9wbmciPiA8eG1wTU06SGlzdG9yeT4gPHJkZjpTZXE+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJjcmVhdGVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOmIzOThlYzI2LWZkNjktNGM5My04ZTBiLTE1YTJkOWY4Y2I1OSIgc3RFdnQ6d2hlbj0iMjAyMS0xMi0wMVQxNzozODoyNy0wNTowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIDIyLjUgKE1hY2ludG9zaCkiLz4gPHJkZjpsaSBzdEV2dDphY3Rpb249InNhdmVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjM4YWI5ZWU5LTQzZGQtNDBmNy1iOTQ4LWU0YTVjNGNmZWEzZSIgc3RFdnQ6d2hlbj0iMjAyMS0xMi0wMVQxNzozODoyNy0wNTowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIDIyLjUgKE1hY2ludG9zaCkiIHN0RXZ0OmNoYW5nZWQ9Ii8iLz4gPC9yZGY6U2VxPiA8L3htcE1NOkhpc3Rvcnk+IDxwaG90b3Nob3A6RG9jdW1lbnRBbmNlc3RvcnM+IDxyZGY6QmFnPiA8cmRmOmxpPkYxMUZFNkQ2QUZBQjJEODdFNDcxNDE4MzJBNzE5MkFBPC9yZGY6bGk+IDxyZGY6bGk+YWRvYmU6ZG9jaWQ6cGhvdG9zaG9wOjZjM2UwNTQ3LTE5NGItN2U0NC04ZTUzLTdkYTg0YjVhMzlmYTwvcmRmOmxpPiA8cmRmOmxpPnhtcC5kaWQ6MjIyNDQ3MzgtNjFiMC00MDEzLTk0M2QtYWYzZWIyMzQ1ZWIzPC9yZGY6bGk+IDwvcmRmOkJhZz4gPC9waG90b3Nob3A6RG9jdW1lbnRBbmNlc3RvcnM+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+CJ87LQAAA3VJREFUeNrtnUsrdHEcxz8zjRIlC6+BLF3yBrwCO5HcI3IrXoNY2ViSclu4hGwspCzIgizdyW2lSO7Es/h1TuPxJIczj5k538/m1JyaZr59/v9zzu/8LyGiSE9PB9ra2oCuri4gMzOTIHF9fQ309vYCfX19wO3trXs2jPgyITsUFRUBa2trSuQvCgsLgfX1dZnl0Szrp25uboC7uzsgLy8P2N3dBd7e3oIVRygEZGdnAxsbG0BaWprbm8ssD0Ts2meYUzs7O4GNw1rS9vY2kJ+fD2xtbQGtra0yy2Mjvby8dO+nwuFwAPupz/uv19dX4OLiQmZ5jC/aI8tSfOzFdAfvGYWlsBSWwlJYCksoLIWlsBRWIhHx9+syMjKAkpISnIq+1YNkVuDwuepgNUarYRurq6tAdXW1ezaxUNUhPsz6vMq6srICVFVV4bw9klkyyw+zolleXgZqa2uBvb09mSWzfDIrmqWlJaCurg44ODiQWTLLJ7OiWVxcBOrr64HDw0OZJbN8MiuahYUFoLGxETg6OpJZMisGzM/PA83NzcDx8bHMklkxYHZ2FmhpaQFOTk5klsyKAVNTU0B7eztwenoqs2RWDJiYmAA6OjqAs7MzmSWzYsD4+DjQ2dkJnJ+fyyyZFQNGRkbcvszGHcssmeU3qampwOPjo8yKLZHg/FWb+WYzJr6HzJJZDk9PT0BpaSlORez5+Vlmyaxv8fLy4to0Nzf3Q5tkVrDNMpvKysqAmZkZH22SWcEzy+6YysvLgenpaffaFztkVvKaZTZVVFQAk5OT/8EmmZW8ZplNlZWVOFX2r9cMZJbM+hc1NTXA2NjYL9oks5LFLBtZOjo6Cjw8PMTVb5NZiWZWQ0MDMDw8DNzf38dtWDIrEcxqamoChoaG4twmmZUIZtlYvcHBQZz1BRMLmfV7Ztn8iOLiYvcTW1NwYGCA96vJJiIyywM+j3VISUkBcnNzgf39/SSwSWMd4sOs5ENmqYNXWApLYSksobAUlsJSWAorAESurq5wdhqwZ0PtNPDxSVk7DXg3q6enB+ju7gZycnJIrvUff4JV5QxLSWZ5aZi2Y5HVM+2NS0FBAc7Kj8Hc0cmcsv3BbBaZpSSzvERpB9u9yLIU0dguV5ubmzLrW2YZ1jLtvbHNW8/KygpUHHY/Zde+/v5+3o/DkFke+ANNsa8Pk78jzwAAAABJRU5ErkJggg%3D%3D%22%7D%2C%7B%22kind%22%3A%22IMAGE%22%2C%22bounds%22%3A%7B%22left%22%3A685%2C%22top%22%3A3404%2C%22right%22%3A785%2C%22bottom%22%3A3504%7D%2C%22hAlign%22%3A%22HORIZONTAL_CENTER%22%2C%22vAlign%22%3A%22BOTTOM%22%2C%22name%22%3A%22Left%20Button%22%2C%22url%22%3A%22data%3Aimage/png%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAIAAAD/gAIDAAAACXBIWXMAAAsTAAALEwEAmpwYAAAHBmlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNy4xLWMwMDAgNzkuZGFiYWNiYiwgMjAyMS8wNC8xNC0wMDozOTo0NCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIDIyLjUgKE1hY2ludG9zaCkiIHhtcDpDcmVhdGVEYXRlPSIyMDIxLTEyLTAxVDE3OjM4OjI3LTA1OjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDIxLTEyLTAxVDE3OjM4OjI3LTA1OjAwIiB4bXA6TW9kaWZ5RGF0ZT0iMjAyMS0xMi0wMVQxNzozODoyNy0wNTowMCIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDpkMmRkYzI4NC1iM2MyLTQzYTgtOTFlZi01MDZlZmY1MjVhMjUiIHhtcE1NOkRvY3VtZW50SUQ9ImFkb2JlOmRvY2lkOnBob3Rvc2hvcDpkNjg5NTQyMS0yZGU4LTMzNDgtYTQ1Yy1mM2M5NTcwNDZjOGIiIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDpkNmQyNTUwNC04ZTAzLTRlOTEtOTgyNy01YTU5MTRkZTljMTIiIHBob3Rvc2hvcDpDb2xvck1vZGU9IjMiIHBob3Rvc2hvcDpJQ0NQcm9maWxlPSJzUkdCIElFQzYxOTY2LTIuMSIgZGM6Zm9ybWF0PSJpbWFnZS9wbmciPiA8eG1wTU06SGlzdG9yeT4gPHJkZjpTZXE+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJjcmVhdGVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOmQ2ZDI1NTA0LThlMDMtNGU5MS05ODI3LTVhNTkxNGRlOWMxMiIgc3RFdnQ6d2hlbj0iMjAyMS0xMi0wMVQxNzozODoyNy0wNTowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIDIyLjUgKE1hY2ludG9zaCkiLz4gPHJkZjpsaSBzdEV2dDphY3Rpb249InNhdmVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOmQyZGRjMjg0LWIzYzItNDNhOC05MWVmLTUwNmVmZjUyNWEyNSIgc3RFdnQ6d2hlbj0iMjAyMS0xMi0wMVQxNzozODoyNy0wNTowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIDIyLjUgKE1hY2ludG9zaCkiIHN0RXZ0OmNoYW5nZWQ9Ii8iLz4gPC9yZGY6U2VxPiA8L3htcE1NOkhpc3Rvcnk+IDxwaG90b3Nob3A6RG9jdW1lbnRBbmNlc3RvcnM+IDxyZGY6QmFnPiA8cmRmOmxpPkYxMUZFNkQ2QUZBQjJEODdFNDcxNDE4MzJBNzE5MkFBPC9yZGY6bGk+IDxyZGY6bGk+YWRvYmU6ZG9jaWQ6cGhvdG9zaG9wOjZjM2UwNTQ3LTE5NGItN2U0NC04ZTUzLTdkYTg0YjVhMzlmYTwvcmRmOmxpPiA8cmRmOmxpPnhtcC5kaWQ6MjIyNDQ3MzgtNjFiMC00MDEzLTk0M2QtYWYzZWIyMzQ1ZWIzPC9yZGY6bGk+IDwvcmRmOkJhZz4gPC9waG90b3Nob3A6RG9jdW1lbnRBbmNlc3RvcnM+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+2wSayQAAA09JREFUeNrtnTlLK1EYhp8EC9HGQkRc4oIrVioKERHEQrARQRELwT8gNvobRAW3kCioaGHv77BQrBKXXyAICm6dWnxkmHu913snY8wy79NMEQjMy3POnDnLfCFclJeXAwsLC8DS0hJQUVFBkHh4eABWVlaA7e1t4OXlxfk1jPhvQnbp7+8HTk9Plchv9Pb2Aufn5zLLo1nWTz09PTnts7u7G7i5uQHe39+DFUcoBLS3twNnZ2dAWVmZ05vLLA+U2LPPMKeur68DG4e1pMvLS6e3SqVSwPz8vMzy2Ejv7++d8VQ4HA5gP/V1//X29gbc3d3JLI/xuT2yLMXnXkwjeM8oLIWlsBSWwlJYQmEpLIWlsAqJkmK6mc7OTqCvrw84OTkBHh8fZVZuKPhZh46ODuD4+Jj03KaRTCaBrq4un/+vWYcgmWWrL4eHh0A0Gv3q9nzfkcwq9qdha2srcHR0BAwMDGicJbN80NLSAhwcHABDQ0MawcssHzQ3NwP7+/vA8PCw3g1llg+ampqAvb09YGRkRLMOMssHjY2NwO7uLjA6OloQYcmsfDWroaEBSCQSwNjYWMGFJbPyyaxIJEJ6T/n4+HhBhyWzcm1WfX09sLW1BUxMTBRNWDIrF2bV1tYCGxsbwNTUVFGGJbN+yqyqqipgc3MTmJmZKfqwZJYHMlzdKS0tBV5fX/P99rS6o2aosNRnOVRWVgJra2vA3Nyc+izxTWa5qa6uBlZXV4HZ2VmZJbOysIumpqYGWF9fB6anp2WWzMrC/qzczkbIrOI1y01dXR3p+fifmUGVWcEwy43N08diMbK56iOzgmeWG1tb3NnZ4btXqmVWsM1y8727a2SWzPoTtiPQ+rLMLJNZMutfZLaLWWbJLC/YyQs7FTY4OCizZFYW+NtpMfsaZltbm8ySWb6xE66Tk5POc/P29lZmyay8RGZliMJSWApLYSkshSUUlsJSWAqrkCixGkZWacDeDVVp4PObsioNeDfL6mItLy+Tng+y2iDCvk1pWEoyy0vDtIpFz8/PpCs62TcZr66uCGpFJ3PKKjrZ+TdLSWZ5idIuPT09TpbCjVW5uri4kFkZmWVYy7S6WIuLi6TPfQUHG0/Zsy8ej/PraV2Z5YEPCP4241l74TQAAAAASUVORK5CYII%3D%22%7D%2C%7B%22kind%22%3A%22IMAGE%22%2C%22bounds%22%3A%7B%22left%22%3A1478%2C%22top%22%3A3362%2C%22right%22%3A1669%2C%22bottom%22%3A3568%7D%2C%22hAlign%22%3A%22RIGHT%22%2C%22vAlign%22%3A%22BOTTOM%22%2C%22name%22%3A%22Thrust%20Button%22%2C%22url%22%3A%22data%3Aimage/png%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAAL8AAADOCAIAAADg9kQ1AAAACXBIWXMAAAsTAAALEwEAmpwYAAAHBmlUWHRYTUw6Y29tLmFkb2JlLnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQiPz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENvcmUgNy4xLWMwMDAgNzkuZGFiYWNiYiwgMjAyMS8wNC8xNC0wMDozOTo0NCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUuY29tL3Bob3Rvc2hvcC8xLjAvIiB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIDIyLjUgKE1hY2ludG9zaCkiIHhtcDpDcmVhdGVEYXRlPSIyMDIxLTEyLTAxVDE3OjM4OjI4LTA1OjAwIiB4bXA6TWV0YWRhdGFEYXRlPSIyMDIxLTEyLTAxVDE3OjM4OjI4LTA1OjAwIiB4bXA6TW9kaWZ5RGF0ZT0iMjAyMS0xMi0wMVQxNzozODoyOC0wNTowMCIgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDpmMjdmOTJkNC05ODhjLTQ3MjQtYjM3OS05Mzg5Mzg3MDE0Y2QiIHhtcE1NOkRvY3VtZW50SUQ9ImFkb2JlOmRvY2lkOnBob3Rvc2hvcDo4Mzc3MTkzOC1mNDc4LTg3NDgtYTRhZC0wNmJiMmJlOGQ4MjYiIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDpmMTRhYzkxNi0wZDgxLTQwZTMtYjFkZC1kMjhkNTkwZDlmZjIiIHBob3Rvc2hvcDpDb2xvck1vZGU9IjMiIHBob3Rvc2hvcDpJQ0NQcm9maWxlPSJzUkdCIElFQzYxOTY2LTIuMSIgZGM6Zm9ybWF0PSJpbWFnZS9wbmciPiA8eG1wTU06SGlzdG9yeT4gPHJkZjpTZXE+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJjcmVhdGVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOmYxNGFjOTE2LTBkODEtNDBlMy1iMWRkLWQyOGQ1OTBkOWZmMiIgc3RFdnQ6d2hlbj0iMjAyMS0xMi0wMVQxNzozODoyOC0wNTowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIDIyLjUgKE1hY2ludG9zaCkiLz4gPHJkZjpsaSBzdEV2dDphY3Rpb249InNhdmVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOmYyN2Y5MmQ0LTk4OGMtNDcyNC1iMzc5LTkzODkzODcwMTRjZCIgc3RFdnQ6d2hlbj0iMjAyMS0xMi0wMVQxNzozODoyOC0wNTowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIDIyLjUgKE1hY2ludG9zaCkiIHN0RXZ0OmNoYW5nZWQ9Ii8iLz4gPC9yZGY6U2VxPiA8L3htcE1NOkhpc3Rvcnk+IDxwaG90b3Nob3A6RG9jdW1lbnRBbmNlc3RvcnM+IDxyZGY6QmFnPiA8cmRmOmxpPkYxMUZFNkQ2QUZBQjJEODdFNDcxNDE4MzJBNzE5MkFBPC9yZGY6bGk+IDxyZGY6bGk+YWRvYmU6ZG9jaWQ6cGhvdG9zaG9wOjZjM2UwNTQ3LTE5NGItN2U0NC04ZTUzLTdkYTg0YjVhMzlmYTwvcmRmOmxpPiA8cmRmOmxpPnhtcC5kaWQ6MjIyNDQ3MzgtNjFiMC00MDEzLTk0M2QtYWYzZWIyMzQ1ZWIzPC9yZGY6bGk+IDwvcmRmOkJhZz4gPC9waG90b3Nob3A6RG9jdW1lbnRBbmNlc3RvcnM+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8P3hwYWNrZXQgZW5kPSJyIj8+ZEYyvwAAFhNJREFUeNrtnXlQE+cbx7O7SSAXN8oVTkWRywoqIDoqeCFKsVpFLG2H1npWrRU7HlOPWu3oWMVRR2zHaq1a1IraQ2UUdWpVBLRDEYJS0SLKFAFBrrDJ/v7Y/mi6m4Rks0nebN7PH45Zsu/77vt+8+57Pc/D40F0kJqamp+fL5VKYVVAjGPlypUEQRAEoVQq/f39YYVADGXLli3Efxk4cCCsFkjf7Nu3j9BGVFQUrByIPnbu3EnoZsCAAbCKINqZO3cu0Rfu7u6woiBUVq1aRRiGp6cnrC7Iv0yZMoUwBpFIBCsNwuPxeEFBQYSRKBQKBEFg1dk7IpGIYER+fj6sPXunuLiYYMo777wDK9B+mT17th5xrF+/3sXFpaGhQc93vL29YTXaI15eXnpkcfr0afJrHh4eer5WX18Pa9Ie0dOpVFZWag6KQ0ND9XdRsDLti6VLl+oRhFgspnw/PT1dz/flcjmsUnvB3d1djxSGDh2q9a5vvvlG1y2PHj2CtWov3L17V5cOVq1apesuBEFKS0t13fjRRx/BirX3d5b+e11dXeH8y34Ri8V6mj8+Pr7PFA4dOqTr9tLSUljDXObNN9/U1fZXr141JAWBQKBHfwEBAbCSuQmKoi9evNDV8E5OTgamk5KSoiuRXbt2wXrmJpmZmbpaffXq1UYlVVFRoSspiUQCq5pr6NkNrampMXbDXM/wGe6ecpDNmzfrau/Q0FAGCebk5MDFQ7tAKBTqaukbN24wS1PP8Pnbb7+Fdc4dsrOzdbV0UFAQ42Tfe+89XcnKZDJY7VwAQZC2tjatbfzkyRMzjaVycnJgzXOBhIQEXW2ckZFhYuIFBQVaU8ZxnM/nw8q3eWpra7U2cEtLi+lnk0NCQnRJMz09HVa+baPnaM7bb7/NShZlZWVa079//z6sf9tm8eLFutTj6OjIShZpaWm6svD19YVNYMOcPXtWa7vu37+fxeUAtVqtNZfs7GzYBLaKg4OD1kZVKpX004OmkJqaqjWjAwcOcLuGUQ4/W0pKitbrXV1dfn5+Li4uKIoyHjgjCIIgiLOzs5eXly7b5Hnz5gkEAi6vhnD42UpKSmJiYnT9Va1W379/X6VStbS0NDc3q9Xqjo6O9vb2np4eBEGUSiV5WAxFUVIBQqFQJBJJJBIEQfr160f2XsHBwfo35xMSEm7evAnfAzaGk5MTAQA7d+6EbWF7TJw4EQT1tLW1cXjZEOWwekAohlQq5fCWOzfVg6LovHnzACnMuHHjoHpsCR8fn/79+wNSmNmzZ0P12BKjRo0CpzDJyclc9RbFTfWkpqYC9Rr18fGB6rENEASJi4sDqkgRERFQPbaBm5tbSEgIUEVKTEyE6rGZITNoTgVnzJiBoihUjw2gywmGFelzQwOqBxSio6MBLBUnz/pwUD3Dhg0DsFSDBg2C6gEdDMP07KtbEVNMf6B6LISjoyOYIwxORkjhmnqADaQVFxfHPffyXFMPM6N0CzB48GAHBweoHqDBcRzYV6pQKITqARqg9kcpuLq6QvWAPmoGtmzcC6/MNfWA7LzC2dkZqgdoQI496+XlxbHa5tSBbQRBWHxzVVdX4zgeHBzMVprcO+DMqb4HRVHTZ8WHDh0aNmyYh4dHREREVFRU//79Q0JCsrKy/vjjDxNThmbtoA+Z9YfT6pMRI0boShzDsPnz55uS+NGjR2EbgYtUKm1ubmbWtEql0pC+4YMPPmCsnkuXLsE2Apf+/ft3d3czaNempibDBzcTJkxgpp68vDw47gGXnp4eDMMY3BgbG9vV1WXglwsLC3fs2MEgl87OTvgLBxf9QSRYHI6IRCJdPntg32PDM3YGd23atIlBL3L+/Hn4c+WUevoMsEUHx/Ha2loGef3yyy/G3tLd3Q3VAy4ymUylUhl1S0lJiVKpZJBXVVUVg+UoqB5w4fP5xqqnqamJWV4MhufcO5zKKfV0dHR0dHQYdUt4eDizLoGBeWhraytUD7jgOG7sayggIIDZOeiEhARjb6mrq4PqAZeenh5j+x4ej5eUlMTgtTVt2jRj76qvr4fqARe1Ws1gCHz48GFjp/qxsbEMnKrAvgf0GXtzc7Oxd0kkEqMiavH5/IKCAgbFa2ho4EFA5uDBg8w2odavX29gFhcuXGCWRWRkJGwgoMnNzWW8B75lyxb9iQsEgkuXLjFOHzS/MBAqGzduNOUIzpYtW7Q6PJRKpfHx8bqCNRmIi4sLx2qba9aNc+fO/e6770xMpLCw8Oeff75z5w5BEOHh4UlJSampqSaGylapVE5OTgymhBDLMWPGDAJIFAoF3KkAneLiYmALplaroXqAhvG+lbl58OAB93p6rqmnq6sLzCXd6upqqB7QUavVYEY0UigUUD02QFlZGYCl+vvvv7lX1bZqS+rg4ODk5ITjOH1rorS0FLTSNjY2alUPOQuz3dG0zajHzc0tOjp60KBBMTExERERAQEB3t7ePB7v6NGjWVlZmmdSARyfnjp1inIsVS6X5+bmRkdHv3z5UqFQPH/+vLa2trq6+sGDB7W1tT09PTwIK0RGRu7Zs6ezs9PAHQBHR0c9X7YKM2fOpE/B9KwMLVq0iHvOfiyNTCYrKCjos23oobguXrwIlHoo7nYdHR0NuSszMxNqgCHR0dEG2kwdOXKEcu+yZcvAkY5KpaIcBgoICDDw3t27dzOzb7RrpkyZYnjzNDc3U6o4LCwMHPVcuHCB8nTTpk0z/Pbr169DARkBg72qsLAwzRQEAgEzg3ZzMGPGDMoDHjt2zKgUamtruR3XnTX69evHoIUWLFhASeerr74CRD0U1xzMzKWh6apBFBUVMahc+vpyUlISCNJ5+PAhpWCM36pDhgyB8tCHh4cH43aiGNZIJBIQ1LN48WLKM65du5ZZUufOnYMK6WNph3E7JScnU1K7evWq1dXj7+9P37JgllRLSwscPutj+PDhjNupqKiIklp8fLx1pUPfM4mKimKc2qtXr0Dz+AzWLqkp3pbHjh1L7l30cvv2bevuTdIXouije8MRCASgReYGSz3M3Fn0QtkQUKvV+/fvt+LjXLx4kXIlJSXFFPWA5n0MLPWYePJ37ty5lCs//fSTtZ6lurqa4qXF09MzICCAcYIIghjrIcS+1MPnm7TnHxcXR/HXfOfOHWudVV24cCGLry0S0N5cYJGcnMz6wu748eMtP17u7u6m2MZjGKZSqUxM1tPTE/Y95npzkQNVSgd25cqVkpISCz/IqFGjKG7wsrOzTX86E/tmjjNx4kTTf/f0kamfn58lO547d+5QCoBhGCspgxbpgoPnmr/++mvKlbq6utzcXIsVIC0tjXJl+vTpIIwLYd9jEOPGjaNPdy3T8ezatYs+V2ptbWUlcU4GVmaNSZMmsVLLT548oSdugaXnrq4u+maC6VOBXjgZ1B049Wgd/fB4vL1795pVPSNHjqT3ec+fP2crfTc3NygSS6hHq6MuFEVbWlrMJJ2NGzfSc3zrrbdYzMLd3R2KRCeTJ09mpZaPHDmiyybB1dXVHNL59ddftWYnFotXrFjBVi5afQtB2FRPn3tJ/v7+7EqnqqpK/9kJuVx+9+5d0zOibAND2FRPTU2NgSODQYMGsSWdiooKQybSKIouX77cxLx8fHygSMwy7tm0aZNRR8flcjmDKEkUzpw5Y9QKckxMjCmZQvWwr57Dhw9TzO0MRCaTHT9+nHFbzp8/n0FMJ4lEMmvWLKgeIFYLp06damKm06dPN9Zy+dSpU/369TMlU3d397Nnz0L1WE09jx8/DgwMZCVfiUQyZ86cx48fG2IZEx0dzdbzfvjhh6YY91gdBDT10M/jaWXDhg2ff/45u74m+Hx+YmKiXC4Xi8UBAQEODg7kPrlSqaypqcFx/NatW6w7cYqMjCwsLDRwKu7n5/f06VPYy2jHkEX9hoYGBtGNQEYoFObk5MAZu6n0acK3YcMGyulBBkil0vDwcLasW5ycnFhp1MjISNJDNFwtZMi4ceN0VdytW7fotlHMyMzMJAiivLx87NixJo6WPvvsM12bskyGEQjy/vvv29DZQttQz6JFi1h0lb1+/frelPPy8hj0HAKBICMjo6Ojg0yks7OTxZM3gYGBuuwYmQWisxfohyh+//131icaO3fu1MyisrLS2BRWrVpFKacplmhaO6GMjAzwxz1gnS2kjGlyc3NjYmJYn2V4eXlpfmSgHqFQSLliiqkNHYIgjh8/PmDAAMqzQ1vSPmqN/M/Lly/j4+OXLVuG4zjruVBOBzMIutbY2Ei5Ehoayno5a2pqgoOD16xZ03sFtCApYKmHfEmlp6d7e3vfunXLHFkIBALKtgYDA81Xr17RV2LMUVqlUrl161a5XP7ll1/CgU0f+Pj4sPsKoOPu7k4ZTGzbts3YRNLS0iiJ0I/is054eDho1oBgndG3QIgJ+vCW4knZEOi3WGABs6KiArRfOwctcvRDf8W0trYamwjdQX1ERITpy5g2h92ph95JMNgsc3R0pFwRi8WUqRxUDwdJSEigXGlpaTH6fa9tbRCqh+MIhUL6eSBW3lw8Hm/EiBFQPVzG39+ffvCZwYy9vb1d60QMqofLaI1pzWDO1dXVRb84ZswY+ho0VA938PDwoF98+fKlsem0tbXRLwoEAns7f2Nf6hk+fLiBHYl+xGKxVidw9nbu2I7Ug6Io3RscZcbu5OQUGxtL/45MJpsyZUrvR5VKpdVBZ3BwMA/C1SGzftcCGIY1NTURBEG3syEDr2RkZJAfRSKRVnv4a9euwXrmJtnZ2VrVQ1q8Yxh2/fp18gp97l1ZWUn+iQzGgyBIfX291tRAO0QBYYeSkhJ6Y5PTdQRBLl++3Hvxxo0bmjcOHDiQblSl6/gf3QkLhAtzdV3eNkQi0Y0bN/TEl6Cb7UVFRW3fvl1rggcOHIC1zTVSUlJ0RUDSev3s2bPkjW5ublq/0NbWpvW6Wq22t1Uf7qNQKIw1+yV348+cOWPsjRMmTIAVzh2Yedxds2YNM1dRcObFKT755BMGImhvb3/27BkzZxfOzs6w2rkAiqKvXr2ycKSB7OxsWPNcIDo62vJxKhjYaUBA5Mcff7RKYECOuWqwRwIDA60VVrK4uJj7owJuPx5bASIYMHz4cOgwxbbRtRhoGejhtCE2w2uvvUZYlbKyMtgKtkpFRYUVpXP37t3BgwfDVrBJ+nRDZj5aW1vHjx/Plm8ykEE4+VQoilorfPCRI0cWLlyoy9mFo6NjYGBgQECAn5+fXC6XyWRKpbKpqemvv/76888/Hz58aK0YvJB/ycrKskqvs27dOu2/UQSJjIzctGmT/mhLarX63Llzc+bM0Wr7AbEEQqHQKtLZvHkzvTAYhk2bNq20tNTY1D799FMTHYpDDAXDMIFAgGGYSCQqLCy0vHT27t1LL5VcLmegG01Gjx4NG5d9XF1dw8LC0tLStm3bdubMmcrKyrq6usrKSqVSaXnpnDhxgl5CtuLA79mzh+50AcIER0fHqVOnXrp0CcdxAgzowd5RFP3hhx/YzWXYsGGw9U16N82cOZO0mAEKiURCGSD/9ttv5siI7v0DYhDh4eHl5eUEeGRlZVGKmpeXZ77soLmP0axevZoAFcoB+NjYWLNmV15eziAimP1y8uRJYKXz/fffU0rbazRoPqDzVEMx61vAdCgHMObNm2eZfE0PaMd9KPEAQINy+IsM5mUxQHO9CxajRo0iwKbXIwKJ/tg2rLNhwwYQmgnEIZhQKGTgz8vCDBkypDfABYIgDQ0Nlgx/RBCEQCCw1k7wvytbADbM7t27AZcOjuOajsmDg4MtHDkLQRCtfoaAVg+Konw+XygUOjg4CIVCPp/P+ikWb2/vBQsWAK6ep0+fanpanThxouXLQF9qAvTNFR8fn5KSMmLEiMDAQGdnZwzDUBRVq9U4jre2tj579qy+vr64uPjmzZu3b9828SdVVVVljngz7HL69OmZM2f2fiwqKjIxzCADuru7ZTIZu3F9jaWPOBUDBgzYu3evnt+Wl5cX2djkKLKgoGDJkiWMI2oFBgaCLx3ef/018/l8q7xEHBwcQkJCqqqqTPmtRkVFRUREhIaGikQiDMNwHO/q6nr48KFCoaiqqmLgyfofBALB2rVrzWGHi6KoVCoNDAwMCwsLCwsLCgqSSCTkEqpV7D4ZcPDgwd7HcXNzU6lUVinG66+/zlg6Y8eO1eXAigTH8a1btzIxKvL19X306JEpD3b69Gl6JFEURXfs2FFXV9fR0dHT04PjOI7jPT097e3tCoVi5cqVJ06csAn17N+/v/ehgoKCrFWMd999l4FuPD09jx07Znguy5cvN+KIyJgxY1h5titXrlA2Zax16o91vvjii96HWrdunbWKsWLFCmOlk5iYyCCjxsZGg+xD9MS0ZgDdDdu1a9c4oJ7y8vJZs2aNHj16wYIFVizG6tWrjZLOkiVLTMmuj5lBREQE609I0SxbJ+4gBEEYtVLAitAnTZqkfcYukUjo4TZNp6mpycPDg/h/uFoMw9rb2+0wEJo5WLp06fnz54cOHUr6ru/q6qqqqqqurqZ/c+TIkWzFeQ0KCqqtraVeLS4uNtNPJCUlRTOjnJwc2G2Yj3v37lE8l4lEInazoIYnS0hIMN/zNDY2ag6fdflsh7AFRT35+flmPGOEIIhWv/ksoukKic/nd3Z2wjY2E9u3b9eUjpl+q6StGcrj8SZPnmxuL40ff/yx5hZjUVERHLWYiby8PM2PWq2FTCc/P/+f/928edPcP4ju7m6BQNCb98GDB2EnYQ5wHNc8au3l5WW+vDw9PVGpVBoXF2eBEwWasatwHIedhDm4cOGCZuinN954w3x5JSYmopYJSMbn8627G2wnUM44JCcnmy+v2NhY1DKm9giCaJ4E0hoaDWI6FRUVlCGz+fLy9fVFfX19LfNgu3fvJvdNEQSxw+DTlkEzWLNAIDCr8zKxWIyKxWLLPFh6enpxcXFmZubly5ctMNKyTzQ7dRcXF7M2rlQq5WsNE2wmYmJijh49CtvYfGiuvJjbayKGYSiMx8ElNm7cSG4jIAiyY8cOc6uHT92zgNgyUVFRCoXi0KFDEyZMMPfgEsMwvuYiHoQDBAcHa/WBZ455NAoPS0CYIRQKUejVDMIMPp+PwhCsEOZzLjjugUD1QKyhHvjmgjCDIAg454IwBMdxFNYChBkqlQqFhyUgzOju7kbNYcMFsZc314sXL2BFQBi+uU6dOgUrAsKAsrIyBEXRzs5OOG+HGItcLkfVanViYiKsC4hR7Nu3r66uDuPxePX19Xw+f8yYMbBSIIZw7969tLQ0Ho/3j51DUVGRUqlMSkqCVQPRz8WLF8ePH0+6iv6Pby9/f//09PSBAwfKZDKpVCoUCkm3uiiKIghCutslAzhiGIYgCHmR/CuPxyMv9lreaJ5aJAiC/GuvKxbyxj7LSt5lvrowymOwWq1Wq9WGlIcgCMNdcZPJ9n4k09fMS9N4UjNZ0l9ib4693yevk7Xdey/5BbVaTf5H81/yr/QvqFQq0kGgSqVSKpUdHR0nT568cuVKbwH+BzMKGHcISCNKAAAAAElFTkSuQmCC%22%7D%5D"
    var  advancedTexture= null;
    function BuildUI(uiObject) {
    if(!advancedTexture) {
       advancedTexture = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI("UI");
    }
    var top =10000;
    var bottom = 0;
    var left = 10000;
    var right = 0;
    
    for (var i = 0; i < uiObject.length; i++) {
        if(uiObject[i].bounds.top < top)
            top = uiObject[i].bounds.top;
        if(uiObject[i].bounds.left < left)
            left = uiObject[i].bounds.left;
        if(uiObject[i].bounds.right > right)
            right = uiObject[i].bounds.right;
        if(uiObject[i].bounds.bottom > bottom)
            bottom = uiObject[i].bounds.bottom;
    }
    var uiWidth = right-left;
    var uiHeight = bottom-top;
    advancedTexture.idealWidth = uiWidth;
    advancedTexture.idealHeight = uiHeight;
    //var scaleH = window.innerWidth/uiWidth;
    var scaleV = window.innerHeight/uiHeight;

    for (var i = 0;i<uiObject.length; i ++) {
        var element = uiObject[i];
        var uiElement;
        var unit = "px";
        var divisorW = 1;//uiWidth*0.01;
        var divisorH = 1;//uiHeight*0.01;
        var uiPrecision = 1000;

        var width = Math.round(uiPrecision*(element.bounds.right-element.bounds.left)/divisorW)/uiPrecision;
        var height = Math.round(uiPrecision*(element.bounds.bottom-element.bounds.top)/divisorH)/uiPrecision;

        var leftOffset = Math.round(uiPrecision*(element.bounds.left - left)/divisorW)/uiPrecision;
        var rightOffset = Math.round(-uiPrecision*(right - element.bounds.right)/divisorW)/uiPrecision;
        var topOffset = Math.round(uiPrecision*(element.bounds.top - top)/divisorH)/uiPrecision;
        var bottomOffset = Math.round(-uiPrecision*(bottom - element.bounds.bottom)/divisorH)/uiPrecision;
        var centerHOffset = Math.round(uiPrecision*(((element.bounds.right+element.bounds.left)/2) - ((right+left)/2) ) /divisorW)/uiPrecision;
        var centerVOffset = Math.round(-uiPrecision*( ((bottom+top)/2) - ((element.bounds.bottom+element.bounds.top)/2))/divisorH)/uiPrecision;

        if (element.kind == "IMAGE") {
            uiElement = BABYLON.GUI.Button.CreateImageOnlyButton(element.name, element.url);
            uiElement.zIndex = 4;
            uiElement.stretch = BABYLON.GUI.Image.STRETCH_UNIFORM;
            uiElement.onPointerDownObservable.add((eventData, state) => {
                if(!spaceCraft)
                    return;
                if(!spaceCraft.physicsImpostor)
                    return;  
                if(state.currentTarget.name == "Thrust Button") {
                    engine_firing = true;
                    particleSystem.start();
                    lensFlareSystem.isEnabled = true;
                    engineLight.setEnabled(true);
                    sound_mainEngine.setVolume(1);
                }
                if (state.currentTarget.name == "Left Button") {
                    setRCS(true, true);
                }
                if (state.currentTarget.name == "Right Button") {
                    setRCS(true, false);
                } 
                if (state.currentTarget.name == "Up Button") {
                    setRCS(false, true);
                }
                if (state.currentTarget.name == "Down Button") {
                    setRCS(false, false);
                }
                if (state.currentTarget.name == "Start Button") {
                    stabilizing = true;
                    // set rotation to point toward retrograde (with animation)
                }
            });
            uiElement.onPointerUpObservable.add((eventData, state) => {
                if(!spaceCraft)
                    return;
                if(!spaceCraft.physicsImpostor)
                    return;  
                if(state.currentTarget.name == "Thrust Button") {
                    if(!spaceCraft)
                        return;
                    if(!spaceCraft.physicsImpostor)
                        return;  
                    spaceCraft.physicsImpostor.setAngularVelocity(av_stop_rotating);
                    engine_firing = false;
                    sound_mainEngine.setVolume(0);
                    particleSystem.stop();
                    lensFlareSystem.isEnabled = false;
                    engineLight.setEnabled(false);
                }
                if (state.currentTarget.name == "Up Button" ||
                    state.currentTarget.name == "Down Button" ||
                    state.currentTarget.name == "Left Button" ||
                    state.currentTarget.name == "Right Button" ) {
                    if(!spaceCraft)
                        return;
                    if(!spaceCraft.physicsImpostor)
                        return;  
                    spaceCraft.physicsImpostor.setAngularVelocity(av_stop_rotating);
                    unsetRCS();
                }

                if (state.currentTarget.name == "Start Button") {
                    stabilizing = false;
                }
            });

        } else if (element.kind == "TEXT") {
            element.text = element.text.replace(/\r/g,"\n");
            uiElement = new BABYLON.GUI.TextBlock(element.name + " Text", element.text);

            uiElement.zIndex = 3;
            uiElement.textWrapping = false;
            var fontSize = parseInt(element.fontSize.split(" ")[0]);

            uiElement.fontSize = fontSize + " pt";
            uiElement.color = "white";
            uiElement.background = "black";
            uiElement.lineSpacing = "8px";

            if(element.align == "RIGHT")
                uiElement.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_RIGHT;
            else if(element.align == "HORIZONTAL_CENTER")
                uiElement.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_CENTER;
            else
                uiElement.textHorizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;

            uiElement.textVerticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_CENTER;

        } else if (element.kind == "SOLIDFILL") {
            uiElement = new BABYLON.GUI.Rectangle();
            uiElement.color = "black";
            uiElement.background = "black";

            uiElement.zIndex = 2;
        }

        if(element.hAlign == "none") {
            uiElement.width = "100%";
        } else {
            uiElement.width = width.toString() + unit;
        }

        if(element.vAlign == "none") {
            uiElement.height = "100%";
        } else {
            uiElement.height = height.toString() + unit;
        }

        if (element.hAlign == "LEFT") {
            uiElement.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;
            uiElement.left = leftOffset.toString() + unit;
        } else if (element.hAlign == "RIGHT") {
            uiElement.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_RIGHT;
            uiElement.left = rightOffset.toString() + unit;
        } else if (element.hAlign == "HORIZONTAL_CENTER") {
            uiElement.horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_CENTER;
            uiElement.left = centerHOffset.toString() + unit;
        }

        if (element.vAlign == "TOP") {
            uiElement.verticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_TOP;
            uiElement.top = topOffset.toString() + unit;
        } else if (element.vAlign == "BOTTOM") {
            uiElement.verticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_BOTTOM;
            uiElement.top = bottomOffset.toString() + unit;
        } else if (element.vAlign == "VERTICAL_CENTER") {
            uiElement.verticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_CENTER;
            uiElement.top = centerVOffset.toString() + unit;
        }
        uiElement.clipContent=false;
        uiElement.clipChildren=false;

        uiElement.alpha = 0.5;
        advancedTexture.addControl(uiElement);
        gUIElements[element.name] = uiElement;

    }
}

    const scene = new BABYLON.Scene(engine);

    var sound_mainEngine = new BABYLON.Sound("mainEngine", "https://storage.googleapis.com/kerbalhelper.appspot.com/MainEngine.mp3", scene, null, {
        loop: true,
        autoplay: true,
        spatialSound: true,
        panningModel: "HRTF",
        distanceModel: "exponential",
        rolloffFactor: 2,
        refDistance: 100,
        volume: 0
    });
    var sound_directionalThrusters = new BABYLON.Sound("directionals", "https://storage.googleapis.com/kerbalhelper.appspot.com/DirectionalThrusters.mp3", scene, null, {
        loop: true,
        autoplay: true,
        spatialSound: true,
        panningModel: "HRTF",
        distanceModel: "exponential",
        rolloffFactor: 2,
        refDistance: 100,
        volume: 0
    });
    var sound_energy = new BABYLON.Sound("directionals", "https://storage.googleapis.com/kerbalhelper.appspot.com/Energy.mp3", scene, null, {
        loop: true,
        autoplay: true,
        spatialSound: true,
        panningModel: "HRTF",
        distanceModel: "exponential",
        rolloffFactor: 2,
        refDistance: 10,
        volume: 1
    });

    var hdrTexture = BABYLON.CubeTexture.CreateFromPrefilteredData("/textures/environment.dds", scene);
    var skybox = scene.createDefaultSkybox(hdrTexture, true, 10000);

    const camera = new BABYLON.ArcRotateCamera("ArcRotateCamera", -Math.PI / 2, Math.PI / 2.2, 100, new BABYLON.Vector3(0, 0, 0), scene);
    camera.attachControl(canvas, true);
//    const light = new BABYLON.HemisphericLight("light", new BABYLON.Vector3(0, 1, 0), scene);
    var sun_light = new BABYLON.DirectionalLight("DirectionalLight", new BABYLON.Vector3(0.5, -1, 0.5), scene);
    sun_light.position.y = 10;
    sun_light.intensity = 10;
    var shadowGenerator = null;
//    var shadowGenerator = new BABYLON.ShadowGenerator(512, sun_light);
    if (shadowGenerator) {
        shadowGenerator.useBlurExponentialShadowMap = true;
        shadowGenerator.useContactHardeningShadow = true;
    }



    // ---------------------------------------------
    // LANDING PAD
    // ---------------------------------------------

    // reflective top
    var glass = BABYLON.MeshBuilder.CreatePlane("glass", {width:20,height:20}, scene);
    glass.rotation.x = Math.PI/2;
    glass.position.y = 5;
    glass.material = new BABYLON.PBRMaterial("g", scene);
    glass.material.diffuseColor  = new BABYLON.Color3(0,0,0);
    glass.material.alpha = 0.2;

    // todo: adjust particle effect to bounce off pad height
    // todo: shadow from the sun
    // todo: dont' show animation until landed

    //Ensure working with new values for glass by computing and obtaining its worldMatrix
    glass.computeWorldMatrix(true);
    var glass_worldMatrix = glass.getWorldMatrix();

    //Obtain normals for plane and assign one of them as the normal
    var glass_vertexData = glass.getVerticesData("normal");
    var glassNormal = new BABYLON.Vector3(glass_vertexData[0], glass_vertexData[1], glass_vertexData[2]);	
    //Use worldMatrix to transform normal into its current value
    glassNormal = new BABYLON.Vector3.TransformNormal(glassNormal, glass_worldMatrix)

    //Create reflecting surface for mirror surface
    var reflector = new BABYLON.Plane.FromPositionAndNormal(glass.position, glassNormal.scale(-1));

    //Create the mirror material
    glass.material.reflectionTexture = new BABYLON.MirrorTexture("mirror", 1024, scene, true);
    glass.material.reflectionTexture.mirrorPlane = reflector;
    glass.material.reflectionTexture.renderList = [];
    glass.material.reflectionTexture.level = 1;
    glass.material.reflectionTexture.adaptiveBlurKernel = 8;
//    glass.material.reflectionTexture.realTimeFiltering = true;
//    glass.material.reflectionTexture.realTimeFilteringQuality = BABYLON.Constants.TEXTURE_FILTERING_QUALITY_HIGH;



    var landing_pad_scale = 10;
    var landing_pad = new BABYLON.TransformNode("landing_pad");
    landing_pad.scaling.x = landing_pad_scale;
    landing_pad.scaling.y = landing_pad_scale;
    landing_pad.scaling.z = landing_pad_scale;


    //https://storage.googleapis.com/kerbalhelper.appspot.com/landing_pad_final.glb
    BABYLON.SceneLoader.ImportMeshAsync("","https://storage.googleapis.com/kerbalhelper.appspot.com/landing_pad_final.glb").then((result) => {
        sound_energy.attachToMesh(result.meshes[0]);
        result.meshes[0].parent = landing_pad;
        glass.material.reflectionTexture.renderList.push(scene.getMeshByName("landing_pad_low"));
        if (shadowGenerator) {
            shadowGenerator.addShadowCaster(scene.getMeshByName("landing_pad_low"));
            scene.getMeshByName("landing_pad_low").receiveShadows = true;
        }

        BABYLON.SceneLoader.ImportMeshAsync("","https://storage.googleapis.com/kerbalhelper.appspot.com/landing_pad_strip.glb").then((result) => {
            var strips_root = result.meshes[0];
            strips_root.scaling.x = landing_pad_scale;
            strips_root.scaling.y = landing_pad_scale;
            strips_root.scaling.z = landing_pad_scale;
            var landing_pad_strip = result.meshes[0].getChildren()[0];

            var ANote0VideoMat = new BABYLON.StandardMaterial("m", scene);
            var ANote0VideoVidTex = new BABYLON.VideoTexture("vidtex","https://storage.googleapis.com/kerbalhelper.appspot.com/Landing%20Strip.mp4", scene);
            ANote0VideoMat.emissiveTexture = ANote0VideoVidTex;
            ANote0VideoVidTex.level = 2;
            ANote0VideoVidTex.uOffset = 0.5;
            ANote0VideoVidTex.uScale = 6;
            ANote0VideoVidTex.wAng = Math.PI/2;
            ANote0VideoMat.emissiveColor = new BABYLON.Color3(0.11, 0.02, 0.02);
            ANote0VideoMat.diffuseColor = new BABYLON.Color3(0,0,0);
            ANote0VideoMat.roughness = 0;

            if(landing_pad_strip) {
            landing_pad_strip.material = ANote0VideoMat;
            var landing_pad_strip_instance_1 = landing_pad_strip.clone("strip1");
            var landing_pad_strip_instance_2 = landing_pad_strip.clone("strip2");
            var landing_pad_strip_instance_3 = landing_pad_strip.clone("strip3");
            landing_pad_strip_instance_1.rotate(new BABYLON.Vector3(0,1,0), Math.PI);
            landing_pad_strip_instance_2.rotate(new BABYLON.Vector3(0,1,0), Math.PI/2);
            landing_pad_strip_instance_3.rotate(new BABYLON.Vector3(0,1,0), -Math.PI/2);
            landing_pad_strip_instance_2.position.y += 0.005;
            landing_pad_strip_instance_3.position.y += 0.005;
//            landing_pad.addChild(landing_pad_strip);
            landing_pad.addChild(landing_pad_strip1);
            landing_pad.addChild(landing_pad_strip2);
            landing_pad.addChild(landing_pad_strip3);
            }
            scene.onPointerObservable.add(function(evt){
                    if(evt.pickInfo.pickedMesh === ANote0Video){
                        //console.log("picked");
                            if(ANote0VideoVidTex.video.paused)
                                ANote0VideoVidTex.video.play();
                            else
                                ANote0VideoVidTex.video.pause();
                            console.log(ANote0VideoVidTex.video.paused?"paused":"playing");
                glass.material.reflectionTexture.renderList = [scene.getMeshByName("plate"), scene.getMeshByName("lightTube"), scene.getMeshByName("lightFixture")];

                    }
            }, BABYLON.PointerEventTypes.POINTERPICK);

        });
    });

    var gl = new BABYLON.GlowLayer("glow", scene);
    gl.intensity = 4;

    // ---------------------------------------------
    // SPACE CRAFT
    // ---------------------------------------------

    var spaceCraft = BABYLON.Mesh.CreateBox("box");
    sound_mainEngine.attachToMesh(spaceCraft);
    sound_directionalThrusters.attachToMesh(spaceCraft);
    var invisibleMaterial = new BABYLON.StandardMaterial("invisible");
    invisibleMaterial.alpha = 0;
    spaceCraft.material = invisibleMaterial;
    var spaceCraftPosition = new BABYLON.Vector3(40, 4, 0);
//    var probe = new BABYLON.ReflectionProbe("main", 512, scene);
//    probe.position = spaceCraft.position;
    BABYLON.SceneLoader.ImportMeshAsync("", "https://storage.googleapis.com/kerbalhelper.appspot.com/", "Eagle_higher_poly_with_animation.glb").then((result) => {
        result.meshes[0].parent = spaceCraft;
        result.meshes[0].position = new BABYLON.Vector3(0,0,0);
        result.meshes[0].scaling.x = 0.3;
        result.meshes[0].scaling.y = 0.3;
        result.meshes[0].scaling.z = 0.3;
        glass.material.reflectionTexture.renderList.push(scene.getMeshByName("Leg1"));
        glass.material.reflectionTexture.renderList.push(scene.getMeshByName("Leg2"));
        glass.material.reflectionTexture.renderList.push(scene.getMeshByName("Leg3"));
        glass.material.reflectionTexture.renderList.push(scene.getMeshByName("Leg4"));
        glass.material.reflectionTexture.renderList.push(scene.getMeshByName("Ladder"));
        glass.material.reflectionTexture.renderList.push(scene.getMeshByName("DS_Base"));
        glass.material.reflectionTexture.renderList.push(scene.getMeshByName("AS_Base"));
        if (shadowGenerator) {
            shadowGenerator.addShadowCaster(scene.getMeshByName("DS_Base"));
            shadowGenerator.addShadowCaster(scene.getMeshByName("AS_Base"));
            scene.getMeshByName("DS_Base").receiveShadows = true;
            scene.getMeshByName("AS_Base").receiveShadows = true;
        }




            BABYLON.SceneLoader.ImportMeshAsync("","https://storage.googleapis.com/kerbalhelper.appspot.com/landing_pad_radar.glb").then((result) => {
                radar = scene.getMeshByName("support_backing_low.006");
                glass.material.reflectionTexture.renderList.push(radar);
                if (shadowGenerator) {
                    shadowGenerator.addShadowCaster(radar);
                    radar.receiveShadows = true;
                }
                radar.parent = landing_pad;

                BABYLON.SceneLoader.ImportMeshAsync("","https://storage.googleapis.com/kerbalhelper.appspot.com/landing_pad_front_part_final.glb").then((result) => {
                    var pipe_attach = scene.getMeshByName("pipe_attach_low");
                    result.meshes[0].parent = landing_pad;
                    pipe_attach.receiveShadows = true;
                    glass.material.reflectionTexture.renderList.push(pipe_attach);
                    if (shadowGenerator) {
                        shadowGenerator.addShadowCaster(pipe_attach);
                    }
                });

            });

//            probe.renderList.push(ground);
//            probe.renderList.push(sphere3);
//            probe.renderList.push(skybox);

//        lander_gold = scene.getMaterialByName("T_LunarModule_DS");
//        lander_gold.reflectionTexture = probe.cubeTexture;
//        lander_gold.realTimeFiltering = true;
//        lander_gold.realTimeFilteringQuality = BABYLON.Constants.TEXTURE_FILTERING_QUALITY_LOW;
    });

    const spaceCraftThrusterOffset = BABYLON.Mesh.CreateBox("thruster", 0.1);
    spaceCraftThrusterOffset.position = new BABYLON.Vector3(0,-1,0);
    spaceCraftThrusterOffset.parent = spaceCraft;

    const spaceCraftRCSThruster1 = BABYLON.Mesh.CreateBox("rcs1", 0.1);
    const spaceCraftRCSThruster2 = BABYLON.Mesh.CreateBox("rcs2", 0.1);
    const spaceCraftRCSThruster3 = BABYLON.Mesh.CreateBox("rcs3", 0.1);
    const spaceCraftRCSThruster4 = BABYLON.Mesh.CreateBox("rcs4", 0.1);
    spaceCraftRCSThruster1.position = new BABYLON.Vector3(-1, 0, 0);
    spaceCraftRCSThruster2.position = new BABYLON.Vector3(1, 0, 0);
    spaceCraftRCSThruster3.position = new BABYLON.Vector3(0, 0, -1);
    spaceCraftRCSThruster4.position = new BABYLON.Vector3(0, 0, 1);
    spaceCraftRCSThruster1.parent = spaceCraft;
    spaceCraftRCSThruster2.parent = spaceCraft;
    spaceCraftRCSThruster3.parent = spaceCraft;
    spaceCraftRCSThruster4.parent = spaceCraft;
    
    var engineLight = new BABYLON.PointLight("pointLight", new BABYLON.Vector3(0, -1, 0), scene);
    var rcsLight1 = new BABYLON.PointLight("rcsLight1", new BABYLON.Vector3(0, 0, 0), scene);
    var rcsLight2 = new BABYLON.PointLight("rcsLight2", new BABYLON.Vector3(0, 0, 0), scene);
    var rcsLightParent1 = new BABYLON.TransformNode("rcsLighParent1", scene);
    var rcsLightParent2 = new BABYLON.TransformNode("rcsLighParent1", scene);
    engineLight.parent = spaceCraft;
    engineLight.intensity = 4;
    engineLight.setEnabled(false);
    rcsLightParent1.parent = spaceCraft;
    rcsLight1.parent = rcsLightParent1;
    rcsLight1.intensity = 4;
    rcsLightParent2.parent = spaceCraft;
    rcsLight2.parent = rcsLightParent2;
    rcsLight2.intensity = 4;

    spaceCraft.position = spaceCraftPosition;
    
    var gravityVector = new BABYLON.Vector3(0,-9.81, 0);
    var physicsPlugin = new BABYLON.CannonJSPlugin();
    scene.enablePhysics(gravityVector, physicsPlugin);


    var lensFlareSystem = new BABYLON.LensFlareSystem("lensFlareSystem", spaceCraftThrusterOffset, scene);
    var flare00 = new BABYLON.LensFlare(
        0.1, // size
        0, // position
        new BABYLON.Color3(1, 1, 1), // color
        "textures/flare.png", // texture
        lensFlareSystem // lens flare system
    );
    var flare01 = new BABYLON.LensFlare(0.075, 0.5, new BABYLON.Color3(0.8, 0.56, 0.72), "textures/flare3.png", lensFlareSystem);
    var flare02 = new BABYLON.LensFlare(0.1, -0.15, new BABYLON.Color3(0.71, 0.8, 0.95), "textures/Flare2.png", lensFlareSystem);
    var flare03 = new BABYLON.LensFlare(0.15, 0.25, new BABYLON.Color3(0.95, 0.89, 0.71), "textures/flare.png", lensFlareSystem);
    lensFlareSystem.isEnabled = false;

    // Ground for positional reference
    const ground = BABYLON.MeshBuilder.CreateGround("ground", {width: 250, height: 250});
//    ground.material = new BABYLON.GridMaterial("groundMat");
//    ground.material.backFaceCulling = false;
//	var roadmaterial = new BABYLON.StandardMaterial("road", scene);
    var roadmaterial = new BABYLON.PBRMaterial("matpbr", scene);

    var roadmaterialpt = new BABYLON.RoadProceduralTexture("customtext", 512, scene);
    var detailTexture = new BABYLON.RoadProceduralTexture("customtext", 512, scene);
    const bumpTexture = new BABYLON.Texture("textures/ParallaxNormal.png", scene);
//    const detailTexture = new BABYLON.Texture("textures/detailmap.png", scene);;
    roadmaterial.metallic = 0;
    roadmaterial.roughness = 0.5;
    roadmaterial.albedoTexture = roadmaterialpt;
    roadmaterial.detailMap.diffuseBlendLevel = 0.5;
    roadmaterial.detailMap.bumpLevel = 0.5;
    roadmaterial.bumpTexture = bumpTexture;
    roadmaterial.bumpTexture.level = 0.34;
    roadmaterial.bumpTexture.uScale = 45;
    roadmaterial.bumpTexture.vScale = 40;
    roadmaterial.detailMap.roughnessBlendLevel = 0.1;
    roadmaterial.detailMap.isEnabled = true;
    roadmaterial.detailMap.texture = detailTexture;
    roadmaterial.detailMap.texture.uScale = 100;
    roadmaterial.detailMap.texture.vScale = 100;


    ground.material = roadmaterial;
    if (shadowGenerator) {
        ground.receiveShadows = true;
    }

    // landing pad box
    const landing_pad_physics = BABYLON.MeshBuilder.CreateBox("landing_pad_box", { width:25, height:9, depth:25 });
    landing_pad_physics.material = invisibleMaterial;
    landing_pad_physics.physicsImpostor = new BABYLON.PhysicsImpostor(landing_pad_physics, BABYLON.PhysicsImpostor.BoxImpostor, { mass: 0, restitution: 0.9 }, scene);
	spaceCraft.physicsImpostor = new BABYLON.PhysicsImpostor(spaceCraft, BABYLON.PhysicsImpostor.BoxImpostor, { mass: 1, restitution: 0.4 }, scene);
	ground.physicsImpostor = new BABYLON.PhysicsImpostor(ground, BABYLON.PhysicsImpostor.BoxImpostor, { mass: 0, restitution: 0.9 }, scene);

    function setupRCSParticleSystem(ps, emitter,  direction) {
        ps.particleTexture = new BABYLON.Texture("textures/flare.png");
        ps.emitter = emitter;
        ps.color1 = new BABYLON.Color4(0.7, 0.8, 1.0, 1.0);
        ps.color2 = new BABYLON.Color4(0.2, 0.5, 1.0, 1.0);
        ps.colorDead = new BABYLON.Color4(0, 0, 0.2, 0.0);
        ps.minEmitPower = 1;
        ps.maxEmitPower = 2;
        ps.minSize = 0.05;
        ps.maxSize = 0.1;
        ps.emitRate = 5000;
        ps.minLifeTime = 0.01;
        ps.maxLifeTime = 0.05;
        ps.direction1 = direction.scale(30);
        ps.direction2 = direction.scale(30);
        ps.minEmitBox = new BABYLON.Vector3(-0.05, -0.05, -0.05); // Starting all from
        ps.maxEmitBox = new BABYLON.Vector3(0.05, 0.05, 0.05); // To...
    }
    const RCSyawPosParticleSystem1 = new BABYLON.ParticleSystem("rcsyawpos1", 2000);
    const RCSyawPosParticleSystem2 = new BABYLON.ParticleSystem("rcsyawpos2", 2000);
    const RCSyawNegParticleSystem1 = new BABYLON.ParticleSystem("rcsyawneg1", 2000);
    const RCSyawNegParticleSystem2 = new BABYLON.ParticleSystem("rcsyawneg2", 2000);
    const RCSpitchPosParticleSystem1 = new BABYLON.ParticleSystem("rcspitchpos1", 2000);
    const RCSpitchPosParticleSystem2 = new BABYLON.ParticleSystem("rcspitchpos2", 2000);
    const RCSpitchNegParticleSystem1 = new BABYLON.ParticleSystem("rcspitchneg1", 2000);
    const RCSpitchNegParticleSystem2 = new BABYLON.ParticleSystem("rcspitchneg1", 2000);
    setupRCSParticleSystem(RCSyawPosParticleSystem1, spaceCraftRCSThruster1, new BABYLON.Vector3(0,1,0));
    setupRCSParticleSystem(RCSyawPosParticleSystem2, spaceCraftRCSThruster2, new BABYLON.Vector3(0,-1,0));
    setupRCSParticleSystem(RCSyawNegParticleSystem1, spaceCraftRCSThruster1, new BABYLON.Vector3(0,-1,0));
    setupRCSParticleSystem(RCSyawNegParticleSystem2, spaceCraftRCSThruster2, new BABYLON.Vector3(0,1,0));
    setupRCSParticleSystem(RCSpitchPosParticleSystem1, spaceCraftRCSThruster3, new BABYLON.Vector3(0,1,0));
    setupRCSParticleSystem(RCSpitchPosParticleSystem2, spaceCraftRCSThruster4, new BABYLON.Vector3(0,-1,0));
    setupRCSParticleSystem(RCSpitchNegParticleSystem1, spaceCraftRCSThruster3, new BABYLON.Vector3(0,-1,0));
    setupRCSParticleSystem(RCSpitchNegParticleSystem2, spaceCraftRCSThruster4, new BABYLON.Vector3(0,1,0));

    var counter = 0;
    scene.registerBeforeRender(function(){
        var landing_pad = scene.getMeshByName("landing_pad_low");
        if (landing_pad) {
            var brightness = 0.5+Math.sin(counter/30)/2;
            brightness += (0.5+Math.sin(counter/11+0.2)/2)*(0.5+Math.sin(counter/62+0.1)/2);
            counter++;
            landing_pad.material.emissiveColor = new BABYLON.Color3(brightness,brightness,brightness);
        }
        // set RCS lights to match particle effects
        if (RCSyawPosParticleSystem1.isStarted()) {
            rcsLightParent1.position.x = -1;
            rcsLightParent1.position.y = 0.5;
            rcsLightParent1.position.z = 0;
            rcsLightParent2.position.x = 1;
            rcsLightParent2.position.y = -0.5;
            rcsLightParent2.position.z = 0;
            rcsLight1.setEnabled(true);
            rcsLight2.setEnabled(true);
        }
        else if (RCSyawNegParticleSystem1.isStarted()) {
            rcsLightParent1.position.x = -1;
            rcsLightParent1.position.y = -0.5;
            rcsLightParent1.position.z = 0;
            rcsLightParent2.position.x = 1;
            rcsLightParent2.position.y = 0.5;
            rcsLightParent2.position.z = 0;
            rcsLight1.setEnabled(true);
            rcsLight2.setEnabled(true);
        }
        else if (RCSpitchPosParticleSystem1.isStarted()) {
            rcsLightParent1.position.x = 0;
            rcsLightParent1.position.y = 0.5;
            rcsLightParent1.position.z = 1;
            rcsLightParent2.position.x = 0;
            rcsLightParent2.position.y = -0.5;
            rcsLightParent2.position.z = -1;
            rcsLight1.setEnabled(true);
            rcsLight2.setEnabled(true);
        }
        else if (RCSpitchNegParticleSystem1.isStarted()) {
            rcsLightParent1.position.x = 0;
            rcsLightParent1.position.y = -0.5;
            rcsLightParent1.position.z = 1;
            rcsLightParent2.position.x = 0;
            rcsLightParent2.position.y = 0.5;
            rcsLightParent2.position.z = -1;
            rcsLight1.setEnabled(true);
            rcsLight2.setEnabled(true);
        }
        else {
            rcsLight1.setEnabled(false);
            rcsLight2.setEnabled(false);
        }
    });

    // Create a particle system
    const particleSystem = new BABYLON.ParticleSystem("particles", 2000);

    //Texture of each particle
    particleSystem.particleTexture = new BABYLON.Texture("textures/flare.png");

    // Position where the particles are emiited from
    particleSystem.emitter = spaceCraft;
    particleSystem.color1 = new BABYLON.Color4(0.7, 0.8, 1.0, 1.0);
    particleSystem.color2 = new BABYLON.Color4(0.2, 0.5, 1.0, 1.0);
    particleSystem.colorDead = new BABYLON.Color4(0, 0, 0.2, 0.0);
    particleSystem.minEmitPower = 1;
    particleSystem.maxEmitPower = 2;
    particleSystem.minSize = 0.5;
    particleSystem.maxSize = 2;
//    particleSystem.direction1 = new BABYLON.Vector3(-2, -16, -2);
//    particleSystem.direction2 = new BABYLON.Vector3(2, -16, 2);
    this.angle = (180 / 360.0) * 2.0 * Math.PI;
    var angular_width = (10.0 / 360.0) * 2.0 * Math.PI;
    var recalculateDirections = function() {
/*        direction = spaceCraftThrusterOffset.absolutePosition.subtract(spaceCraft.absolutePosition).scale(10);
        particleSystem.direction1 = direction;
        particleSystem.direction2 = direction;*/
        particleSystem.direction1 = new BABYLON.Vector3(
            Math.sin(this.angle+angular_width)*10,
            Math.cos(this.angle+angular_width)*10,
            Math.sin(angular_width)*10);
        particleSystem.direction2 = new BABYLON.Vector3(
            Math.sin(this.angle-angular_width)*10,
            Math.cos(this.angle-angular_width)*10,
            -Math.sin(angular_width)*10
        );
    }
    recalculateDirections();

/*    particleSystem.direction1 = new BABYLON.Vector3(
        Math.sin(angle+angular_width),
        Math.cos(angle)*(-16),
        Math.sin(angle+angular_width)*(-2));
    particleSystem.direction2 = new BABYLON.Vector3(
        Math.sin(angle-angular_width),
        Math.cos(angle)*(-16),
        Math.sin(angle-angular_width));*/
    particleSystem.emitRate = 500;
    particleSystem.minLifeTime = 0.3;
    particleSystem.maxLifeTime = 1.5;

    particleSystem.updateFunction = function (particles) {
        for (var index = 0; index < particles.length; index++) {
            var particle = particles[index];
            particle.age += this._scaledUpdateSpeed;

            if (particle.age >= particle.lifeTime) {
                // Recycle
                particles.splice(index, 1);
                this._stockParticles.push(particle);
                index--;
                continue;
            } else {
                particle.colorStep.scaleToRef(this._scaledUpdateSpeed, this._scaledColorStep);
                particle.color.addInPlace(this._scaledColorStep);
                if (particle.color.a < 0) particle.color.a = 0;

                particle.angle += particle.angularSpeed * this._scaledUpdateSpeed;

                if (particle.position.y > 0 && particle.color.r != 0.2) {
                    particle.direction.scaleToRef(this._scaledUpdateSpeed, this._scaledDirection);
                    particle.position.addInPlace(this._scaledDirection);
                }
                else {
                    particle.direction.scaleToRef(this._scaledUpdateSpeed, this._scaledDirection);
                    particle.direction.y = 2;
                    particle.position.addInPlace(this._scaledDirection);
                    particle.color = new BABYLON.Color4(0.2, 0.2, 0.2, 1);                
                }
                this.gravity.scaleToRef(this._scaledUpdateSpeed, this._scaledGravity);
                particle.direction.addInPlace(this._scaledGravity);
            }
        }
    };

    const av_rotate_left = new BABYLON.Vector3(0,0,1);
    const av_rotate_right = new BABYLON.Vector3(0,0,-1);
    const av_rotate_up = new BABYLON.Vector3(1,0,0);
    const av_rotate_down = new BABYLON.Vector3(-1,0,0);
    const av_stop_rotating = new BABYLON.Vector3(0,0,0);
    const av_rotate_around = new BABYLON.Vector3(0,1,0);
    
    var engine_firing = false;
    var stabilizing = false;
    var face_camera_mode = true;
    var face_camera_strength = 5;
    var upright_mode = true;
    var upright_strength = 5;
        var vertical_speed = 0;

    spaceCraft.physicsImpostor.registerOnPhysicsCollide(ground.physicsImpostor, function(main, collided) {
        if (vertical_speed > 10) {
            // crash!
//            spaceCraft.setEnabled(false);
//	        spaceCraft.material.diffuseColor = new BABYLON.Color3(Math.random(), Math.random(), Math.random());
        }
	});

    // todo: detect crash --> split apart, detect successful landing
    window.addEventListener("keydown", (ev) => {

            if(!spaceCraft)
                return;
            if(!spaceCraft.physicsImpostor)
                return;  
                
            if (ev.code == "KeyA") {
                spaceCraft.computeWorldMatrix()
                setRCS(true, true);
            }
            if (ev.code == "KeyD") {
                spaceCraft.computeWorldMatrix()
                setRCS(true, false);
            } 
            if (ev.code == "KeyW") {
                spaceCraft.computeWorldMatrix()
                setRCS(false, true);
            }
            if (ev.code == "KeyX") {
                spaceCraft.computeWorldMatrix()
                setRCS(false, false);
            }
            if (ev.code == "KeyS") {
                stabilizing = true;
                rcsActive = true;

                // set rotation to point toward retrograde (with animation)
            }
            if (ev.code == "Space") {
                engine_firing = true;
                sound_mainEngine.setVolume(1);
                particleSystem.start();
                lensFlareSystem.isEnabled = true;
                engineLight.setEnabled(true);
            }
        });
    window.addEventListener("keyup", (ev) => {
        if (ev.code == "KeyA" || ev.code == "KeyD" || ev.code == "KeyW" || ev.code == "KeyX" || ev.code == "KeyS") {
            if(!spaceCraft)
                return;
            if(!spaceCraft.physicsImpostor)
                return;  
            spaceCraft.physicsImpostor.setAngularVelocity(av_stop_rotating);
            unsetRCS();
        }
        if (ev.code == "KeyS") {
            rcsActive = false;
            stabilizing = false;
        }
        if (ev.code == "Space") {
            engine_firing = false;
            particleSystem.stop();
            sound_mainEngine.setVolume(0);


            lensFlareSystem.isEnabled = false;
            engineLight.setEnabled(false);
        }
    });
    window.setInterval(() => {
        if (spaceCraft) {
//            vertical_speed = -spaceCraft.physicsImpostor.getLinearVelocity().y;
        }
        if (!rcsActive) {
            // this should be an "easy mode" option -- keeps ship upright
            if(!spaceCraft)
                return;
            if(!spaceCraft.physicsImpostor)
                return;  

            var newAngularVelocity = new BABYLON.Vector3(0,0,0);
            if (face_camera_mode) {
                // this should be an "easy mode" option -- keeps a/d being screen ccw/cw and w being towards camera, x being away from camera
                var cameraToCraft = camera.globalPosition.subtract(spaceCraft.absolutePosition).normalize();
                var craftFront = spaceCraftRCSThruster4.absolutePosition.subtract(spaceCraft.absolutePosition).normalize();
                var neededAngularVelocity = cameraToCraft.cross(craftFront);   
                neededAngularVelocity.x = 0;
                neededAngularVelocity.z = 0;
                neededAngularVelocity.y;
                if (neededAngularVelocity.lengthSquared() > 0.01) {
                    newAngularVelocity = neededAngularVelocity.scale(face_camera_strength);
                }
            }
            if (upright_mode) {
                var craft_up = spaceCraft.absolutePosition.subtract(spaceCraftThrusterOffset.absolutePosition).normalize();
                newAngularVelocity.addInPlace(craft_up.cross(BABYLON.Vector3.Up()).scale(upright_strength));
            }
            if (newAngularVelocity.lengthSquared() > 0) {
                spaceCraft.physicsImpostor.setAngularVelocity(newAngularVelocity);
            }
        }
        if (stabilizing) {
            if(!spaceCraft)
                return;
            if(!spaceCraft.physicsImpostor)
                return;  
            var forceDirection = spaceCraft.absolutePosition.subtract(spaceCraftThrusterOffset.absolutePosition).normalize();
            var angularVelocity = spaceCraft.physicsImpostor.getLinearVelocity().cross(forceDirection);
            spaceCraft.physicsImpostor.setAngularVelocity(angularVelocity);
            const min_thrust_effect = 0.1;
            if (BABYLON.Vector3.Dot(angularVelocity, av_rotate_down) > min_thrust_effect) {
                RCSpitchPosParticleSystem1.start();
                RCSpitchPosParticleSystem2.start();
            } else {
                RCSpitchPosParticleSystem1.stop();
                RCSpitchPosParticleSystem2.stop();
            }
            if (BABYLON.Vector3.Dot(angularVelocity, av_rotate_up) > min_thrust_effect) {
                RCSpitchNegParticleSystem1.start();
                RCSpitchNegParticleSystem2.start();
            } else {
                RCSpitchNegParticleSystem1.stop();
                RCSpitchNegParticleSystem2.stop();
            }
            if (BABYLON.Vector3.Dot(angularVelocity, av_rotate_left) > min_thrust_effect) {
                RCSyawPosParticleSystem1.start();
                RCSyawPosParticleSystem2.start();
            } else {
                RCSyawPosParticleSystem1.stop();
                RCSyawPosParticleSystem2.stop();
            }
            if (BABYLON.Vector3.Dot(angularVelocity, av_rotate_right) > min_thrust_effect) {
                RCSyawNegParticleSystem1.start();
                RCSyawNegParticleSystem2.start();
            } else {
                RCSyawNegParticleSystem1.stop();
                RCSyawNegParticleSystem2.stop();
            }
        }
        if (engine_firing) {
                if(!spaceCraft)
                    return;
                if(!spaceCraft.physicsImpostor)
                    return;  
                forceDirection = spaceCraft.absolutePosition.subtract(spaceCraftThrusterOffset.absolutePosition).normalize();
                const forceMagnitude = 40;
                var contactLocalRefPoint = BABYLON.Vector3.Zero();
                spaceCraft.physicsImpostor.applyForce(forceDirection.scale(forceMagnitude), spaceCraft.getAbsolutePosition().add(contactLocalRefPoint));
        }
    }, 33);

    var jsonString = unescape(gUIString);
    var uiObject = JSON.parse(jsonString);
    BuildUI(uiObject);
    setTimeout(()=> {
        gElements["Instructions Text"].alpha = 0;
        gElements["Instructions Fill"].alpha = 0;
    }, 1000);

    return scene;
}
